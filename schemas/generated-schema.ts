/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/install/settings": {
    get: operations["GetInstallSettings"];
  };
  "/install/setup": {
    post: operations["PostInstallSetup"];
  };
  "/install/validateDatabase": {
    post: operations["PostInstallValidateDatabase"];
  };
  "/server/status": {
    get: operations["GetStatus"];
  };
  "/server/version": {
    get: operations["GetVersion"];
  };
  "/user": {
    get: operations["GetUser"];
  };
  "/user/login": {
    post: operations["PostUserLogin"];
  };
  "/user/logout": {
    post: operations["PostUserLogout"];
  };
  "/user/sections": {
    get: operations["GetAllowedSections"];
  };
}

export interface components {
  schemas: {
    /** @enum {string} */
    ConsentLevel: "Minimal" | "Basic" | "Detailed";
    TelemetryModel: {
      level: components["schemas"]["ConsentLevel"];
      description: string;
    };
    InstallUserModel: {
      /** Format: float */
      minCharLength: number;
      /** Format: float */
      minNonAlphaNumericLength: number;
      consentLevels: components["schemas"]["TelemetryModel"][];
    };
    InstallDatabaseModel: {
      id: string;
      /** Format: float */
      sortOrder: number;
      displayName: string;
      defaultDatabaseName: string;
      providerName: string | null;
      isConfigured: boolean;
      requiresServer: boolean;
      serverPlaceholder: string | null;
      requiresCredentials: boolean;
      supportsIntegratedAuthentication: boolean;
      requiresConnectionTest: boolean;
    };
    InstallSettingsResponse: {
      user: components["schemas"]["InstallUserModel"];
      databases: components["schemas"]["InstallDatabaseModel"][];
    };
    ProblemDetails: {
      type: string;
      /** Format: float */
      status: number;
      title?: string;
      detail?: string;
      instance?: string;
      errors?: { [key: string]: unknown };
    };
    InstallSetupDatabaseConfiguration: {
      server?: string | null;
      password?: string | null;
      username?: string | null;
      databaseName?: string | null;
      databaseType?: string | null;
      useIntegratedAuthentication?: boolean | null;
      connectionString?: string | null;
    };
    InstallSetupRequest: {
      name: string;
      email: string;
      password: string;
      subscribeToNewsletter: boolean;
      telemetryLevel: components["schemas"]["ConsentLevel"];
      database: components["schemas"]["InstallSetupDatabaseConfiguration"];
    };
    InstallValidateDatabaseRequest: {
      database: components["schemas"]["InstallSetupDatabaseConfiguration"];
    };
    /** @enum {string} */
    ServerStatus: "running" | "must-install" | "must-upgrade";
    StatusResponse: {
      serverStatus: components["schemas"]["ServerStatus"];
    };
    VersionResponse: {
      version: string;
    };
    UserResponse: {
      username: string;
      role: string;
    };
    UserLoginRequest: {
      username: string;
      password: string;
      persist: boolean;
    };
    AllowedSectionsResponse: {
      sections: string[];
    };
  };
}

export interface operations {
  GetInstallSettings: {
    responses: {
      /** 200 response */
      200: {
        content: {
          "application/json": components["schemas"]["InstallSettingsResponse"];
        };
      };
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
  };
  PostInstallSetup: {
    parameters: {};
    responses: {
      /** 201 response */
      201: unknown;
      /** 400 response */
      400: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["InstallSetupRequest"];
      };
    };
  };
  PostInstallValidateDatabase: {
    parameters: {};
    responses: {
      /** 201 response */
      201: unknown;
      /** 400 response */
      400: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["InstallValidateDatabaseRequest"];
      };
    };
  };
  GetStatus: {
    responses: {
      /** 200 response */
      200: {
        content: {
          "application/json": components["schemas"]["StatusResponse"];
        };
      };
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
  };
  GetVersion: {
    responses: {
      /** 200 response */
      200: {
        content: {
          "application/json": components["schemas"]["VersionResponse"];
        };
      };
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
  };
  GetUser: {
    responses: {
      /** 200 response */
      200: {
        content: {
          "application/json": components["schemas"]["UserResponse"];
        };
      };
      /** 403 response */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
  };
  PostUserLogin: {
    parameters: {};
    responses: {
      /** 201 response */
      201: unknown;
      /** 403 response */
      403: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UserLoginRequest"];
      };
    };
  };
  PostUserLogout: {
    responses: {
      /** 201 response */
      201: unknown;
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
  };
  GetAllowedSections: {
    responses: {
      /** 200 response */
      200: {
        content: {
          "application/json": components["schemas"]["AllowedSectionsResponse"];
        };
      };
      /** default response */
      default: {
        content: {
          "application/json": components["schemas"]["ProblemDetails"];
        };
      };
    };
  };
}

export interface external {}
