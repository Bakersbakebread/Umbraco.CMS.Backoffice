openapi: 3.0.2
info:
  title: umbraco-backoffice-api
  version: 1.0.0
paths:
  /init:
    get:
      operationId: GetInit
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitResponse'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /version:
    get:
      operationId: GetVersion
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/login:
    post:
      operationId: PostUserLogin
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
        required: true
      responses:
        '201':
          description: 201 response
        '403':
          description: 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user/logout:
    post:
      operationId: PostUserLogout
      responses:
        '201':
          description: 201 response
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /user:
    get:
      operationId: GetUser
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '403':
          description: 403 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /install:
    get:
      operationId: GetInstall
      responses:
        '200':
          description: 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UmbracoInstaller'
    post:
      operationId: PostInstall
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UmbracoInstallerPerformInstallRequest'
        required: true
      responses:
        '201':
          description: 201 response
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /install/database/validate:
    post:
      operationId: PostInstallValidateDatabase
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UmbracoInstallerDatabaseConfiguration'
        required: true
      responses:
        '201':
          description: 201 response
        '400':
          description: 400 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    InitResponse:
      type: object
      properties:
        installed:
          type: boolean
      required:
        - installed
    ErrorResponse:
      type: object
      properties:
        errorMessage:
          type: string
      required:
        - errorMessage
    VersionResponse:
      type: object
      properties:
        version:
          type: string
      required:
        - version
    UserLoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        persist:
          type: boolean
      required:
        - username
        - password
        - persist
    UserResponse:
      type: object
      properties:
        username:
          type: string
        role:
          type: string
      required:
        - username
        - role
    ConsentLevel:
      type: object
      properties:
        level:
          type: string
          enum:
            - Minimal
            - Basic
            - Detailed
        description:
          type: string
      required:
        - level
        - description
    UmbracoDatabaseConfiguration:
      type: object
      properties:
        id:
          type: string
        sortOrder:
          type: number
          format: float
        displayName:
          type: string
        defaultDatabaseName:
          type: string
        providerName:
          type: string
          nullable: true
        supportsQuickInstall:
          type: boolean
        isAvailable:
          type: boolean
        requiresServer:
          type: boolean
        serverPlaceholder:
          type: string
          nullable: true
        requiresCredentials:
          type: boolean
        supportsIntegratedAuthentication:
          type: boolean
        requiresConnectionTest:
          type: boolean
      required:
        - id
        - sortOrder
        - displayName
        - defaultDatabaseName
        - providerName
        - supportsQuickInstall
        - isAvailable
        - requiresServer
        - serverPlaceholder
        - requiresCredentials
        - supportsIntegratedAuthentication
        - requiresConnectionTest
    UmbracoDatabaseConfigurationQuickInstall:
      type: object
      properties:
        displayName:
          type: string
        defaultDatabaseName:
          type: string
      required:
        - displayName
        - defaultDatabaseName
    UmbracoInstallerStepModel:
      type: object
      properties:
        minCharLength:
          type: number
          format: float
        minNonAlphaNumericLength:
          type: number
          format: float
        customInstallAvailable:
          type: boolean
        consentLevels:
          type: array
          items:
            $ref: '#/components/schemas/ConsentLevel'
        databases:
          type: array
          items:
            $ref: '#/components/schemas/UmbracoDatabaseConfiguration'
        quickInstallSettings:
          $ref: '#/components/schemas/UmbracoDatabaseConfigurationQuickInstall'
    UmbracoInstallerStep:
      type: object
      properties:
        model:
          $ref: '#/components/schemas/UmbracoInstallerStepModel'
          nullable: true
        view:
          type: string
        name:
          type: string
        description:
          type: string
        serverOrder:
          type: number
          format: float
      required:
        - model
        - view
        - name
        - description
        - serverOrder
    UmbracoInstaller:
      type: object
      properties:
        installId:
          type: string
        steps:
          type: array
          items:
            $ref: '#/components/schemas/UmbracoInstallerStep'
      required:
        - installId
        - steps
    UmbracoInstallerDatabaseConfiguration:
      type: object
      properties:
        connectionString:
          type: string
        providerName:
          type: string
        integratedAuth:
          type: boolean
        databaseProviderMetadataId:
          type: string
      required:
        - connectionString
        - providerName
        - integratedAuth
        - databaseProviderMetadataId
    UmbracoInstallerPerformInstallRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        subscribeToNewsletter:
          type: boolean
        telemetryLevel:
          type: string
          enum:
            - Minimal
            - Basic
            - Detailed
        database:
          $ref: '#/components/schemas/UmbracoInstallerDatabaseConfiguration'
      required:
        - name
        - email
        - password
        - subscribeToNewsletter
        - telemetryLevel
        - database
